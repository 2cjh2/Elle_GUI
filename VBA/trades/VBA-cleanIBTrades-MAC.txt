Sub clean_ibtrades()

    Dim wb As Workbook
    Dim ws1 As Worksheet
    Dim ws2 As Worksheet
    Dim ws3 As Worksheet
    Dim ws4 As Worksheet
    Dim ws5 As Worksheet
    Dim ws6 As Worksheet
    Dim trades_start As Range
    Dim trades_end As Range
    
    'Close screen updating and possible alerts
    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
      
    'Delete useless worksheets if exists in this workbook
    Set wb = ThisWorkbook
    On Error Resume Next
    wb.Worksheets("Section Info").Delete
    wb.Worksheets("Trades").Delete
    wb.Worksheets("Orders").Delete
    wb.Worksheets("Allocation and Wash").Delete
    
    
    Set ws1 = wb.Worksheets("Sheet1")
    ws1.Cells.UnMerge
    
    ThisWorkbook.Sheets("Sheet1").Copy _
    After:=ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count)
    
    Set ws2 = ThisWorkbook.Worksheets(2)
    ws2.Name = "Trades"
    
    'In the sheet1, find the start along with the end row of section "trade"
    With ws2.Columns(1)
        Set stocks_start = .Find("Stocks", lookAt:=xlWhole, _
        MatchCase:=True).Offset(2)
        Set stocks_end = .Find("Equity and Index Options", lookAt:=xlWhole, _
        MatchCase:=True).Offset(-2)
        Set options_start = .Find("Equity and Index Options", lookAt:=xlWhole, _
        MatchCase:=True).Offset(2)
        Set options_end = .Find("Forex", lookAt:=xlWhole, _
        MatchCase:=True).Offset(-2)
        Set forex_start = .Find("Forex", lookAt:=xlWhole, _
        MatchCase:=True).Offset(2)
        Set forex_end = .Find("Bonds", lookAt:=xlWhole, _
        MatchCase:=True).Offset(-2)
        Set bonds_start = .Find("Bonds", lookAt:=xlWhole, _
        MatchCase:=True).Offset(2)
        Set bonds_end = .Find("Total", After:=bonds_start.Offset(1), lookAt:=xlWhole, _
        MatchCase:=True)

    End With
       
    'In the sheet2, display the information of trade section
    'set the format as well
    Set ws3 = wb.Worksheets.Add(After:=ws2)
    ws3.Name = "Section Info"
    With ws3
        .Cells(1, 1).Value = "Section"
        .Cells(1, 2).Value = "Start Row"
        .Cells(1, 3).Value = "End Row"
        .Cells(1, 4).Value = "Notes"
        .Cells(2, 1).Value = "Stocks"
        .Cells(2, 2).Value = stocks_start.Row
        .Cells(2, 3).Value = stocks_end.Row
        .Cells(2, 4).Value = "Info is based on original file"
        .Cells(3, 1).Value = "Options"
        .Cells(3, 2).Value = options_start.Row
        .Cells(3, 3).Value = options_end.Row
        .Cells(3, 4).Value = "Info is based on original file"
        .Cells(4, 1).Value = "Forex"
        .Cells(4, 2).Value = forex_start.Row
        .Cells(4, 3).Value = forex_end.Row
        .Cells(4, 4).Value = "Info is based on original file"
        .Cells(5, 1).Value = "Bonds"
        .Cells(5, 2).Value = bonds_start.Row
        .Cells(5, 3).Value = bonds_end.Row
        .Cells(5, 4).Value = "Info is based on original file"
        .Range("A1:D1").Font.Bold = True
        .Range("A1").CurrentRegion.HorizontalAlignment = Excel.xlCenter
        .Range("A1").CurrentRegion.AutoFit
    End With
    
    Dim lColumn As Integer
    Dim lRow As Integer
    Dim filecode As String
    
    Randomize
    filecode = Right(Format(Date, "dd/mm/yyyy"), 1) & Mid(Format(Date, "dd/mm/yyyy"), 4, 2) & Left(Format(Date, "dd/mm/yyyy"), 2) & Chr(Int((90 - 65 + 1) * Rnd + 65))

    With ws2

        lColumn = .Cells(stocks_start.Row, Columns.Count).End(xlToLeft).Column
        lRow = .Cells(Rows.Count, 1).End(xlUp).Row
        .Cells(stocks_start.Row - 3, lColumn + 1).Value = "SecType"
        .Range(.Cells(stocks_start.Row, lColumn + 1), .Cells(stocks_end.Row, lColumn + 1)).Value = "S"
        .Range(.Cells(options_start.Row, lColumn + 1), .Cells(options_end.Row, lColumn + 1)).Value = "O"
        .Range(.Cells(forex_start.Row, lColumn + 1), .Cells(forex_end.Row, lColumn + 1)).Value = "FX"
        .Range(.Cells(bonds_start.Row, lColumn + 1), .Cells(bonds_end.Row, lColumn + 1)).Value = "B"
        
        .Range(.Rows(1), .Rows(stocks_start.Row - 4)).Delete
        .Range(.Rows(bonds_end.Row + 1), .Rows(lRow)).Delete
        
        
        colofsectype = .Rows(1).Find("SecType").Column
        .Columns(colofsectype).Insert
        .Cells(1, colofsectype) = "bkrType"
        
        .Cells(2, colofsectype).Formula = "=IF(ISNUMBER(FIND(""Closed"", A2)), ""allocation"", IF(ISNUMBER(FIND(""Wash"", A2)), ""wash"",IF(C2=""-"", ""order"","""")))"
        .Cells(2, colofsectype).Copy
        .Range(.Cells(3, colofsectype), .Cells(bonds_end.Row, colofsectype)).PasteSpecial (xlPasteAll)
        
        .Columns(colofsectype).Copy
        .Columns(colofsectype).PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
        
        colofdatetime = .Rows(1).Find("Date/Time").Column
        .Range(.Cells(2, colofdatetime), .Cells(bonds_end.Row, colofdatetime)).NumberFormat = "yyyy-mm-dd HH:mm:ss"
        
        .Columns(colofsectype).Insert
        
        .Range(.Cells(1, colofsectype), .Cells(bonds_end.Row, colofsectype)).Formula = "=IF(AND(B:B=""""),NA(),"""")"
        .Range(.Cells(1, colofsectype), .Cells(bonds_end.Row, colofsectype)).SpecialCells(xlCellTypeFormulas, xlErrors).EntireRow.Select
        .Range(.Cells(1, colofsectype), .Cells(bonds_end.Row, colofsectype)).SpecialCells(xlCellTypeFormulas, xlErrors).EntireRow.Delete Shift:=xlUp
        .Range(.Cells(1, colofsectype), .Cells(bonds_end.Row, colofsectype)).Clear
        .Columns(colofsectype).Delete
        
        
        numofrows = .UsedRange.Rows.Count
        
        .Columns(colofsectype).Insert
        .Cells(1, colofsectype) = "totalQ"
        .Cells(2, colofsectype).Formula = "=IF(ISNUMBER(FIND(""order"", N2)), D2, M1)"
        .Cells(2, colofsectype).Copy
        .Range(.Cells(2, colofsectype), .Cells(numofrows, colofsectype)).PasteSpecial (xlPasteAll)
        
        .Columns(colofsectype).Copy
        .Columns(colofsectype).PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
        
        .Columns(1).Insert
        .Cells(1, 1).Value = "filecode"
        .Cells(2, 1).Value = filecode
        .Cells(2, 1).Copy
        .Range(.Cells(2, 1), .Cells(numofrows, 1)).PasteSpecial (xlPasteAll)
    
    End With

    wb.Sheets.Add After:=Worksheets(Worksheets.Count)
    Set ws4 = ThisWorkbook.Worksheets(4)
    ws4.Name = "Orders"

    
    With ws2
        'start to generate option type, expire, strike data
        colofdatetime = .Rows(1).Find("Date/Time").Column
        .Columns(colofdatetime + 1).Insert
        .Cells(1, colofdatetime + 1).Value = "O_Type"
        
        .Columns(colofdatetime + 1).Insert
        .Cells(1, colofdatetime + 1).Value = "Strike"
        
        .Columns(colofdatetime + 1).Insert
        .Cells(1, colofdatetime + 1).Value = "Expiry"
        
        .Columns(colofdatetime + 1).Insert
        .Cells(1, colofdatetime + 1).Value = "Underlying"
        
        
        'start to calulate total Q
        colofdatetime = .Rows(1).Find("Date/Time").Column
        coloftotalQ = .Rows(1).Find("totalQ").Column
        colofq = .Rows(1).Find("Quantity").Column
        colofbkrtype = .Rows(1).Find("bkrType").Column
        colofsymbol = .Rows(1).Find("Symbol").Column
        colofotype = .Rows(1).Find("O_Type").Column
        colofstrike = .Rows(1).Find("Strike").Column
        colofexpiry = .Rows(1).Find("Expiry").Column
        colofunderlying = .Rows(1).Find("Underlying").Column
        
        years = .Cells(1, Columns.Count).End(xlToLeft).Column
        .Columns(years).Insert
        .Cells(1, years).Value = "yr"
        colofyears = .Rows(1).Find("yr").Column
        
        orders = .Cells(1, Columns.Count).End(xlToLeft).Column
        .Columns(orders).Insert
        .Cells(1, orders).Value = "order"
        
        coloforders = .Rows(1).Find("order").Column

        ws4.Rows(1).EntireRow.Value = .Rows(1).EntireRow.Value
        colofsectype = .Rows(1).Find("SecType").Column
    End With
    
    Dim h As Integer
    Dim u As Integer
    Dim symbolstrings As String
    Dim datetimestrings As String
    h = 2
    u = 1
    
        ws2.Range(ws2.Cells(2, colofstrike), ws2.Cells(numofrows, colofstrike)).NumberFormat = "0.00"
        
        For l = 2 To numofrows
            
            If ws2.Cells(l, colofbkrtype) = "order" Then
                ws2.Cells(l, coloforders) = u
                u = u + 1
            Else
                ws2.Cells(l, coloforders) = ws2.Cells(l - 1, coloforders)
            End If
            
        Next l
        
        For r = numofrows To 2 Step -1
            
            If ws2.Cells(r, colofsectype) = "O" Then
                symbolstrings = ws2.Cells(r, colofsymbol).Text
                stringarray = Split(symbolstrings, " ")
                ws2.Cells(r, colofunderlying) = stringarray(0)
                ws2.Cells(r, colofexpiry) = stringarray(1)
                ws2.Cells(r, colofstrike) = stringarray(2)
                ws2.Cells(r, colofotype) = stringarray(3)
            ElseIf ws2.Cells(r, colofsectype).Text = "S" Then
                ws2.Cells(r, colofunderlying) = ws2.Cells(r, colofsymbol)
            ElseIf ws2.Cells(r, colofsectype).Text = "FX" Then
                ws2.Cells(r, colofunderlying) = ws2.Cells(r, colofsymbol)
            End If
            
            
            If ws2.Cells(r, colofsymbol) = "Symbol" Then
                ws2.Rows(r).EntireRow.Delete
            End If
            
            If InStr(ws2.Cells(r, colofdatetime), ",") > 0 Then
                ws2.Cells(r, colofdatetime) = Replace(ws2.Cells(r, colofdatetime), ",", "")
            End If
            
            If ws2.Cells(r, colofbkrtype) = "allocation" Then
                current_location = r
                loop_ending_location = r - 15
                
                For t = current_location To loop_ending_location Step -1
                    If ws2.Cells(t, colofbkrtype) = "" Then
                        ws2.Cells(current_location, coloftotalQ) = ws2.Cells(t, colofq)
                        ws2.Cells(current_location, colofsymbol) = ws2.Cells(t, colofsymbol)
                        If ws2.Cells(t, colofq) < 0 And ws2.Cells(current_location, colofq) > 0 Then
                            ws2.Cells(current_location, colofq) = 0 - ws2.Cells(current_location, colofq)
                        End If
                        Exit For
                    End If
                Next t
            ElseIf ws2.Cells(r, colofbkrtype) = "wash" Then
                ws2.Cells(r, coloftotalQ) = ""
                
                current_location1 = r
                loop_ending_location1 = r - 10
                
                For p = current_location1 To loop_ending_location1 Step -1
                    If ws2.Cells(p, colofbkrtype) = "" Then
                        ws2.Cells(current_location1, colofsymbol) = ws2.Cells(p, colofsymbol)
                        Exit For
                    End If
                Next p
                
                
            ElseIf ws2.Cells(r, colofbkrtype) = "order" Then
                ws4.Rows(h).EntireRow.Value = ws2.Rows(r).EntireRow.Value
                ws2.Rows(r).EntireRow.Delete
                h = h + 1
            End If
        Next r

    ws2.Range(ws2.Cells(2, v), ws2.Cells(numofrows, colofdatetime)).NumberFormat = "yyyy-mm-dd HH:mm:ss"
    
    With ws2
        inputLine = .Cells(1, .Columns.Count).End(xlToLeft).Column
        .Columns(inputLine).Insert
        .Cells(1, inputLine).Value = "inputLine"
        
        numofrows = .UsedRange.Rows.Count

        colofsectype = .Rows(1).Find("SecType").Column
        
        .Cells(2, colofsectype + 1).Formula = "=IF(ISNUMBER(FIND(""Closed"", D2)), 0, IF(ISNUMBER(FIND(""Wash"", D2)), 0,1))"
        .Cells(2, colofsectype + 1).Copy
        .Range(.Cells(2, colofsectype + 1), .Cells(numofrows, colofsectype + 1)).PasteSpecial (xlPasteAll)
        
        .Cells(1, colofsectype + 2) = 0
        
        letteraddress1 = Split(.Cells(1, colofsectype + 1).Address, "$")(1)
        letteraddress2 = Split(.Cells(1, colofsectype + 2).Address, "$")(1)
        
        .Cells(2, colofsectype + 2).Formula = "=SUM(" & letteraddress1 & "2" & "+" & letteraddress2 & "1)"
        .Cells(2, colofsectype + 2).Copy
        .Range(.Cells(3, colofsectype + 2), .Cells(numofrows, colofsectype + 2)).PasteSpecial (xlPasteAll)
        
        .Range(.Cells(1, colofsectype + 2), .Cells(numofrows, colofsectype + 2)).Copy
        .Range(.Cells(1, colofsectype + 1), .Cells(numofrows, colofsectype + 1)).PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
        .Range(.Cells(1, colofsectype + 2), .Cells(numofrows, colofsectype + 2)).Delete
        .Cells(1, colofsectype + 1) = "bkrGroup"

    End With
        
    wb.Sheets.Add After:=Worksheets(Worksheets.Count)
    Set ws5 = ThisWorkbook.Worksheets(5)
    ws5.Name = "Allocation and Wash"
    ws5.Rows(1).EntireRow.Value = ws2.Rows(1).EntireRow.Value
    

    Dim w As Integer
    w = 2
    
    With ws2
        colofbkrtype = .Rows(1).Find("bkrType").Column
        colofdatetimeinws2 = .Rows(1).Find("Date/Time").Column
        colofyearinws2 = .Rows(1).Find("yr").Column
        
        For m = numofrows To 2 Step -1
                
            datetimestrings = ws2.Cells(m, colofdatetimeinws2).Text
            datetimestringarray = Split(datetimestrings, " ")
            ws2.Cells(m, 100) = datetimestringarray(0)
            ws2.Cells(m, colofyearinws2) = Right(ws2.Cells(m, 100).Value, 4)
        
            If .Cells(m, colofbkrtype) = "allocation" Then
                ws5.Rows(w).EntireRow.Value = ws2.Rows(m).EntireRow.Value
                ws2.Rows(m).EntireRow.Delete
                w = w + 1
            ElseIf .Cells(m, colofbkrtype) = "wash" Then
                ws5.Rows(w).EntireRow.Value = ws2.Rows(m).EntireRow.Value
                ws2.Rows(m).EntireRow.Delete
                w = w + 1
            End If
        Next m
        ws2.Columns(100).Delete
        ws5.Columns(100).Delete
    End With
    
    With ws5
        numofrowsofws5 = .UsedRange.Rows.Count
        numpofcolumnsofws5 = .Cells(1, Columns.Count).End(xlToLeft).Column
        colofsectypeofws5 = .Rows(1).Find("SecType").Column
        colofsymbolofws5 = .Rows(1).Find("Symbol").Column
        colofexpiryofws5 = .Rows(1).Find("Expiry").Column
        colofstrikeofws5 = .Rows(1).Find("Strike").Column
        colofunderlyingofws5 = .Rows(1).Find("Underlying").Column
        colofotypeofws5 = .Rows(1).Find("O_Type").Column
        
        For j = numofrowsofws5 To 2 Step -1
            If .Cells(j, colofsectypeofws5) = "O" Then
                symbolstringsofws5 = .Cells(j, colofsymbolofws5).Text
                stringarrayws5 = Split(symbolstringsofws5, " ")
                .Cells(j, colofunderlyingofws5) = stringarrayws5(0)
                .Cells(j, colofexpiryofws5) = stringarrayws5(1)
                .Cells(j, colofstrikeofws5) = stringarrayws5(2)
                .Cells(j, colofotypeofws5) = stringarrayws5(3)
            ElseIf .Cells(j, colofsectypeofws5).Text = "S" Then
                .Cells(j, colofunderlyingofws5) = .Cells(j, colofsymbolofws5)
            ElseIf .Cells(j, colofsectypeofws5).Text = "FX" Then
                .Cells(j, colofunderlyingofws5) = .Cells(j, colofsymbolofws5)
            End If
        
        Next j
    End With

    
    'Table Clean up
    ws2.Cells(1, 3) = "Trade_Time"
    ws4.Cells(1, 3) = "Trade_Time"
    ws5.Cells(1, 3) = "Trade_Time"
    
    'format the trade table
    
    With ws2
        
        'delete usless columns

        brokertype = .Rows(1).Find("bkrType").Column
        .Columns(brokertype).Delete
        
        .Rows(1).Find("Symbol").Value = "symbol"
        .Rows(1).Find("Trade_Time").Value = "trade_Time"
        .Rows(1).Find("Underlying").Value = "underlying"
        .Rows(1).Find("Expiry").Value = "expiry"
        .Rows(1).Find("Strike").Value = "strike"
        .Rows(1).Find("Proceeds").Value = "proceeds"
        .Rows(1).Find("Basis").Value = "basis"
        .Rows(1).Find("Quantity").Value = "Q"
        .Rows(1).Find("T. Price").Value = "price"
        .Rows(1).Find("Comm/Tax").Value = "comm"
        .Rows(1).Find("Realized P/L").Value = "realized_PL"
        .Rows(1).Find("Code").Value = "codes"
        .Rows(1).Find("C. Price").Value = "C_Price"
        .Rows(1).Find("Exchange").Value = "Xchange"
        .Rows(1).Find("SecType").Value = "secType"
        
        'Add OC Type, LS and Account
        numofcolumnsinws2 = .Cells(1, Columns.Count).End(xlToLeft).Column
        numofrowsinws2 = .UsedRange.Rows.Count
        .Columns(numofcolumnsinws2 + 1).Insert
        .Cells(1, numofcolumnsinws2 + 1).Value = "account"
        .Range(.Cells(2, numofcolumnsinws2 + 1), .Cells(numofrowsinws2, numofcolumnsinws2 + 1)).Value = "IB9048"
        
        .Columns(numofcolumnsinws2 + 2).Insert
        .Cells(1, numofcolumnsinws2 + 2).Value = "LS"
        
        .Columns(numofcolumnsinws2 + 3).Insert
        .Cells(1, numofcolumnsinws2 + 3).Value = "OC"
        
        .Columns(numofcolumnsinws2 + 4).Insert
        .Cells(1, numofcolumnsinws2 + 4).Value = "multi"

        'rearrange the columns
        
        nams = Array("inputLine", "bkrGroup", "symbol", "trade_Time", "OC", "LS", "Q", "price", "proceeds", "comm", "basis", "realized_PL", "codes", "account", "yr", "filecode", "totalQ", "secType", "multi", "underlying", "expiry", "strike", "O_Type", "Xchange", "order")
        For i = 24 To 0 Step -1
            .Columns(1).Insert
            searchingstring = nams(i)
            orderinws2 = .Rows(1).Find(searchingstring).Column
            .Columns(orderinws2).Copy Destination:=.Columns(1)
            newsearchstring = nams(i) + "NEW"
            .Cells(1, 1).Value = newsearchstring
            orderinws2todelete = .Rows(1).Find(searchingstring).Column
            .Columns(orderinws2todelete).Delete
            .Rows(1).Find(newsearchstring).Value = searchingstring
        Next i


        'set number format (keep decimals)
        proeedsinws2 = .Rows(1).Find("proceeds").Column
        .Range(.Cells(2, proeedsinws2), .Cells(numofrows, proeedsinws2)).NumberFormat = "0.00"
        
        basisinws2 = .Rows(1).Find("basis").Column
        .Range(.Cells(2, basisinws2), .Cells(numofrows, basisinws2)).NumberFormat = "0.00"
        
        rplinws2 = .Rows(1).Find("realized_PL").Column
        .Range(.Cells(2, rplinws2), .Cells(numofrows, rplinws2)).NumberFormat = "0.00"
        
        qinws2 = .Rows(1).Find("Q").Column
        .Range(.Cells(2, qinws2), .Cells(numofrows, qinws2)).NumberFormat = "0.00"
        
        num = .Rows(1).Find("order").Column
        numofcolumns = .Cells(1, Columns.Count).End(xlToLeft).Column
        numofrows = .UsedRange.Rows.Count
        
        With .Range(.Cells(2, 1), .Cells(numofrows, numofcolumns))
            .Sort key1:=.Columns(num), order1:=xlAscending
        End With
        
        mtmplinws2todelete = .Rows(1).Find("MTM P/L").Column
        .Columns(mtmplinws2todelete).Delete
        
        cpriceinws2 = .Rows(1).Find("C_Price").Column
        .Cells(1, cpriceinws2).Value = "fills"
        
        currentnumofrows2 = .UsedRange.Rows.Count
        currentfillsinws2 = .Rows(1).Find("fills").Column
        currentorderinws2 = .Rows(1).Find("order").Column
        .Range(.Cells(2, currentfillsinws2), .Cells(currentnumofrows2, currentfillsinws2)).Value = 0
        
        For r = 2 To currentnumofrows2
            For p = r + 1 To r + 21
                If .Cells(p, currentorderinws2) - .Cells(r, currentorderinws2) = 1 Then
                    .Cells(r, currentfillsinws2) = p - r
                    r = p - 1
                    m = p
                    Exit For
                End If
            Next p
        Next r
        
        For r = m To currentnumofrows2
            .Cells(r, currentfillsinws2) = currentnumofrows2 - m + 1
        Next r
        
        For r = 2 To currentnumofrows2
            If .Cells(r, currentfillsinws2) = 0 Then
                .Cells(r, currentfillsinws2) = .Cells(r - 1, currentfillsinws2)
            End If
        Next r

        num = .Rows(1).Find("trade_Time").Column
        numofcolumns = .Cells(1, Columns.Count).End(xlToLeft).Column
        numofrows = .UsedRange.Rows.Count
        With .Range(.Cells(2, 1), .Cells(numofrows, numofcolumns))
            .Sort key1:=.Columns(num), order1:=xlAscending
        End With
        
        currentnumofrows = .UsedRange.Rows.Count
        currentlsinws2 = .Rows(1).Find("LS").Column
        .Cells(2, currentlsinws2).Formula = "=IF(G2>0, ""L"", ""S"")"
        .Cells(2, currentlsinws2).Copy
        .Range(.Cells(3, currentlsinws2), .Cells(currentnumofrows, currentlsinws2)).PasteSpecial (xlPasteAll)
        
        currentocinws2 = .Rows(1).Find("OC").Column
        .Cells(2, currentocinws2).Formula = "=IF(ISNUMBER(SEARCH(""O"", M2)), ""O"", IF(ISNUMBER(SEARCH(""C"", M2)), ""C"", ""FX""))"
        .Cells(2, currentocinws2).Copy
        .Range(.Cells(3, currentocinws2), .Cells(currentnumofrows, currentocinws2)).PasteSpecial (xlPasteAll)
        
        currentmultiinws2 = .Rows(1).Find("multi").Column
        .Cells(2, currentmultiinws2).Formula = "=IF(ISNUMBER(SEARCH(""O"", R2)), 100, 1)"
        .Cells(2, currentmultiinws2).Copy
        .Range(.Cells(3, currentmultiinws2), .Cells(currentnumofrows, currentmultiinws2)).PasteSpecial (xlPasteAll)

        'separate bonds and forex from trades table

        wb.Sheets.Add After:=Worksheets(Worksheets.Count)
        Set ws6 = ThisWorkbook.Worksheets(6)
        ws6.Name = "FOREX and Bonds"
        ws6.Rows(1).EntireRow.Value = ws2.Rows(1).EntireRow.Value
        
        colofsectype = ws2.Rows(1).Find("secType").Column
        h = 2
    
        For r = numofrows To 2 Step -1
            If ws2.Cells(r, colofsectype) = "FX" Then
                ws6.Rows(h).EntireRow.Value = ws2.Rows(r).EntireRow.Value
                ws2.Rows(r).EntireRow.Delete
                h = h + 1
            ElseIf ws2.Cells(r, colofsectype) = "B" Then
                ws6.Rows(h).EntireRow.Value = ws2.Rows(r).EntireRow.Value
                ws2.Rows(r).EntireRow.Delete
                h = h + 1
            End If
        Next r
        
        inputLine = .Rows(1).Find("inputLine").Column
        numofrowsnew = .UsedRange.Rows.Count
        letteraddress3 = Split(.Cells(1, inputLine).Address, "$")(1)
        .Cells(2, inputLine).Value = 1
        .Cells(3, inputLine).Formula = "= 1 + " & letteraddress3 & "2"
        .Cells(3, inputLine).Copy
        .Range(.Cells(3, inputLine), .Cells(numofrowsnew, inputLine)).PasteSpecial (xlPasteAll)

    End With
    
    With ws6
        
        numofws6 = .Rows(1).Find("trade_Time").Column
        numofcolumnsofws6 = .Cells(1, Columns.Count).End(xlToLeft).Column
        numofrowsofws62 = .UsedRange.Rows.Count
        With .Range(.Cells(2, 1), .Cells(numofrowsofws62, numofcolumnsofws6))
            .Sort key1:=.Columns(numofws6), order1:=xlAscending
        End With
        
        inputlineofws6 = .Rows(1).Find("inputLine").Column
        letteraddress4 = Split(.Cells(1, inputlineofws6).Address, "$")(1)
        .Cells(2, inputlineofws6).Value = 1
        .Cells(3, inputlineofws6).Formula = "= 1 + " & letteraddress4 & "2"
        .Cells(3, inputlineofws6).Copy
        .Range(.Cells(3, inputlineofws6), .Cells(numofrowsofws62, inputlineofws6)).PasteSpecial (xlPasteAll)
        
        .Range(.Cells(2, numofws6), .Cells(numofrowsofws62, numofws6)).NumberFormat = "yyyy-mm-dd HH:mm:ss"
    End With
    
    ws4.Range(Cells(2, 3), Cells(numofrows1, 3)).NumberFormat = "yyyy-mm-dd HH:mm:ss"

    With ws4
        num = .Rows(1).Find("Trade_Time").Column
        numofcolumns = .Cells(1, Columns.Count).End(xlToLeft).Column
        numofrows = .UsedRange.Rows.Count
        With .Range(.Cells(2, 1), .Cells(numofrows, numofcolumns))
            .Sort key1:=.Columns(num), order1:=xlAscending
        End With
        numofrows1 = .UsedRange.Rows.Count
        
        inputline2 = .Cells(1, Columns.Count).End(xlToLeft).Column
        .Columns(inputline2).Insert
        .Cells(1, inputline2).Value = "inputLine"
        letteraddress4 = Split(.Cells(1, inputline2).Address, "$")(1)
        .Cells(2, inputline2).Value = 1
        .Cells(3, inputline2).Formula = "= 1 + " & letteraddress4 & "2"
        .Cells(3, inputline2).Copy
        .Range(.Cells(3, inputline2), .Cells(numofrows1, inputline2)).PasteSpecial (xlPasteAll)
        
        expiryinws4 = .Rows(1).Find("Expiry").Column
        strikeinws4 = .Rows(1).Find("Strike").Column
        trade_time4 = .Rows(1).Find("Trade_Time").Column
        .Range(.Cells(2, trade_time4), .Cells(numofrows1, trade_time4)).NumberFormat = "yyyy-mm-dd HH:mm:ss"
        .Range(.Cells(2, expiryinws4), .Cells(numofrows1, expiryinws4)).NumberFormat = "yyyy-mm-dd HH:mm:ss"
        .Range(.Cells(2, strikeinws4), .Cells(numofrows1, strikeinws4)).NumberFormat = "0.00"
        
        .Rows(1).Find("Symbol").Value = "symbol"
        .Rows(1).Find("Trade_Time").Value = "trade_Time"
        .Rows(1).Find("Underlying").Value = "underlying"
        .Rows(1).Find("Expiry").Value = "expiry"
        .Rows(1).Find("Strike").Value = "strike"
        .Rows(1).Find("Proceeds").Value = "proceeds"
        .Rows(1).Find("Basis").Value = "basis"
        .Rows(1).Find("Quantity").Value = "Q"
        .Rows(1).Find("T. Price").Value = "price"
        .Rows(1).Find("Comm/Tax").Value = "comm"
        .Rows(1).Find("Realized P/L").Value = "realized_PL"
        .Rows(1).Find("MTM P/L").Value = "MTM_PL"
        .Rows(1).Find("Code").Value = "codes"
        .Rows(1).Find("C. Price").Value = "C_Price"
        .Rows(1).Find("Exchange").Value = "Xchange"
        .Rows(1).Find("SecType").Value = "secType"
    End With
    
    ws5.Range(Cells(2, 3), Cells(numofrows2, 3)).NumberFormat = "yyyy-mm-dd HH:mm:ss"
    
    
    With ws5
        num = .Rows(1).Find("Trade_Time").Column
        numofcolumns = .Cells(1, Columns.Count).End(xlToLeft).Column
        numofrows = .UsedRange.Rows.Count
        With .Range(.Cells(2, 1), .Cells(numofrows, numofcolumns))
            .Sort key1:=.Columns(num), order1:=xlAscending
        End With
        
        numofrows2 = .UsedRange.Rows.Count
        
        exchangeinws5 = .Rows(1).Find("Exchange").Column
        .Columns(exchangeinws5).Delete
        
        cpriceinws5 = .Rows(1).Find("C. Price").Column
        .Columns(cpriceinws5).Delete
        
        proceedsinws5 = .Rows(1).Find("Proceeds").Column
        .Columns(proceedsinws5).Delete
        
        commtaxinws5 = .Rows(1).Find("Comm/Tax").Column
        .Columns(commtaxinws5).Delete
        
        mtmplinws5 = .Rows(1).Find("MTM P/L").Column
        .Columns(mtmplinws5).Delete
        
        trade_time5 = .Rows(1).Find("Trade_Time").Column
        .Range(.Cells(2, trade_time5), .Cells(numofrows1, trade_time5)).NumberFormat = "yyyy-mm-dd HH:mm:ss"
     
        expiryinws5 = .Rows(1).Find("Expiry").Column
        .Range(.Cells(2, expiryinws5), .Cells(numofrows2, expiryinws5)).NumberFormat = "yyyy-mm-dd HH:mm:ss"
        
        strikeinws5 = .Rows(1).Find("Strike").Column
        .Range(.Cells(2, strikeinws5), .Cells(numofrows1, strikeinws5)).NumberFormat = "0.00"
        
        numofcolumns2 = ws5.Cells(1, Columns.Count).End(xlToLeft).Column
        .Columns(numofcolumns2).Insert
        .Cells(1, numofcolumns2).Value = "account"
        .Range(.Cells(2, numofcolumns2), .Cells(numofrows2, numofcolumns2)).Value = "IB9048"

        .Rows(1).Find("Symbol").Value = "symbol"
        .Rows(1).Find("Trade_Time").Value = "lot_Time"
        .Rows(1).Find("Underlying").Value = "underlying"
        .Rows(1).Find("Expiry").Value = "expiry"
        .Rows(1).Find("Strike").Value = "strike"
        .Rows(1).Find("Basis").Value = "basis"
        .Rows(1).Find("SecType").Value = "secType"
        .Rows(1).Find("Quantity").Value = "Q"
        .Rows(1).Find("T. Price").Value = "price"
        .Rows(1).Find("Realized P/L").Value = "realized_PL"
        .Rows(1).Find("Code").Value = "codes"
        
        priceinws5 = .Rows(1).Find("price").Column
        .Columns(priceinws5).Delete
        
        expiryinws5 = .Rows(1).Find("expiry").Column
        .Columns(expiryinws5).Delete
        
        underlyinginws5 = .Rows(1).Find("underlying").Column
        .Columns(underlyinginws5).Delete
        
        strikeinws5 = .Rows(1).Find("strike").Column
        .Columns(strikeinws5).Delete
        
        otypeinws5 = .Rows(1).Find("O_Type").Column
        .Columns(otypeinws5).Delete
        
        sectypeinws5 = .Rows(1).Find("secType").Column
        .Columns(sectypeinws5).Delete
        
        
        wb.Sheets.Add After:=Worksheets(Worksheets.Count)
        Set ws7 = ThisWorkbook.Worksheets(7)
        ws7.Name = "brokerIBmatches"
        ws7.Rows(1).EntireRow.Value = ws5.Rows(1).EntireRow.Value
        
        colofsectypeinws5 = ws5.Rows(1).Find("bkrType").Column
        q = 2
    
        For r = numofrows2 To 2 Step -1
            If ws5.Cells(r, colofsectypeinws5) = "allocation" Then
                ws7.Rows(q).EntireRow.Value = ws5.Rows(r).EntireRow.Value
                ws5.Rows(r).EntireRow.Delete
                q = q + 1
                numofrows2 = numofrows2 - 1
            End If
        Next r
        
        bkrtypeinws5 = .Rows(1).Find("bkrType").Column
        .Columns(bkrtypeinws5).Delete
        
        inputline3 = .Rows(1).Find("inputLine").Column
        letteraddress5 = Split(.Cells(1, inputline3).Address, "$")(1)
        .Cells(2, inputline3).Value = 1
        .Cells(3, inputline3).Formula = "= 1 + " & letteraddress5 & "2"
        .Cells(3, inputline3).Copy
        .Range(.Cells(3, inputline3), .Cells(numofrows2, inputline3)).PasteSpecial (xlPasteAll)
        
        totalQinws5 = .Rows(1).Find("totalQ").Column
        .Columns(totalQinws5).Delete
        
        basisinws5 = .Rows(1).Find("basis").Column
        .Columns(basisinws5).Delete
        
        numofrowsofnewws5 = .UsedRange.Rows.Count
        lottimeinws5 = .Rows(1).Find("lot_Time").Column
        .Range(.Cells(2, lottimeinws5), .Cells(numofrowsofnewws5, lottimeinws5)).NumberFormat = "yyyy-mm-dd HH:mm:ss"
        
        .Name = "Wash"
        
        newbkrgroupinws5 = .Cells(1, 1).End(xlToLeft).Column
        .Columns(newbkrgroupinws5).Insert
        
        bkrgroupinws5 = .Rows(1).Find("bkrGroup").Column
        .Columns(bkrgroupinws5).Copy Destination:=.Columns(1)
        .Cells(1, 1).Value = "bkrGroupNEW"
        
        newinputlineinws5 = .Cells(1, 1).End(xlToLeft).Column
        .Columns(newinputlineinws5).Insert
        
        inputlinesinws5 = .Rows(1).Find("inputLine").Column
        .Columns(inputlinesinws5).Copy Destination:=.Columns(1)
        .Cells(1, 1).Value = "inputLineNEW"
        
        numofcolumnsinws5 = .Cells(1, Columns.Count).End(xlToLeft).Column
        
        filecodeinws5 = .Rows(1).Find("filecode").Column
        .Columns(filecodeinws5).Copy Destination:=.Columns(numofcolumnsinws5 + 1)
        .Cells(1, numofcolumnsinws5 + 1).Value = "filecodeNEW"
        
        newinputlineinws5 = .Rows(1).Find("inputLine").Column
        .Columns(newinputlineinws5).Delete
        
        newbkrgroupinws5 = .Rows(1).Find("bkrGroup").Column
        .Columns(newbkrgroupinws5).Delete
        
        newfilecodeinws5 = .Rows(1).Find("filecode").Column
        .Columns(newfilecodeinws5).Delete
        
        .Rows(1).Find("inputLineNEW").Value = "inputLine"
        .Rows(1).Find("bkrGroupNEW").Value = "bkrGroup"
        .Rows(1).Find("filecodeNEW").Value = "filecode"
        
    End With
    
    With ws7
        
        bkrtypeinws7 = .Rows(1).Find("bkrType").Column
        .Columns(bkrtypeinws7).Delete
        
        numofws7 = .Rows(1).Find("lot_Time").Column
        numofcolumnsofws7 = .Cells(1, Columns.Count).End(xlToLeft).Column
        numofrowsofws72 = .UsedRange.Rows.Count
        With .Range(.Cells(2, 1), .Cells(numofrowsofws72, numofcolumnsofws7))
            .Sort key1:=.Columns(numofws7), order1:=xlAscending
        End With
        
        inputlineofws7 = .Rows(1).Find("inputLine").Column
        letteraddress7 = Split(.Cells(1, inputlineofws7).Address, "$")(1)
        .Cells(2, inputlineofws7).Value = 1
        .Cells(3, inputlineofws7).Formula = "= 1 + " & letteraddress7 & "2"
        .Cells(3, inputlineofws7).Copy
        .Range(.Cells(3, inputlineofws7), .Cells(numofrowsofws72, inputlineofws7)).PasteSpecial (xlPasteAll)
        
        lottimeinws7 = .Rows(1).Find("lot_Time").Column
        .Range(.Cells(2, lottimeinws7), .Cells(numofrowsofws72, lottimeinws7)).NumberFormat = "yyyy-mm-dd HH:mm:ss"
        
        newbkrgroupinws7 = .Cells(1, 1).End(xlToLeft).Column
        .Columns(newbkrgroupinws7).Insert
        
        bkrgroupinws7 = .Rows(1).Find("bkrGroup").Column
        .Columns(bkrgroupinws7).Copy Destination:=.Columns(1)
        .Cells(1, 1).Value = "bkrGroupNEW"
        
        newinputlineinws7 = .Cells(1, 1).End(xlToLeft).Column
        .Columns(newinputlineinws7).Insert
        
        inputlinesinws7 = .Rows(1).Find("inputLine").Column
        .Columns(inputlinesinws7).Copy Destination:=.Columns(1)
        .Cells(1, 1).Value = "inputLineNEW"
        
        numofcolumnsinws7 = .Cells(1, Columns.Count).End(xlToLeft).Column
        
        filecodeinws7 = .Rows(1).Find("filecode").Column
        .Columns(filecodeinws7).Copy Destination:=.Columns(numofcolumnsinws7 + 1)
        .Cells(1, numofcolumnsinws7 + 1).Value = "filecodeNEW"
        
        newinputlineinws7 = .Rows(1).Find("inputLine").Column
        .Columns(newinputlineinws7).Delete
        
        newbkrgroupinws7 = .Rows(1).Find("bkrGroup").Column
        .Columns(newbkrgroupinws7).Delete
        
        newfilecodeinws7 = .Rows(1).Find("filecode").Column
        .Columns(newfilecodeinws7).Delete
        
        .Rows(1).Find("inputLineNEW").Value = "inputLine"
        .Rows(1).Find("bkrGroupNEW").Value = "bkrGroup"
        .Rows(1).Find("filecodeNEW").Value = "filecode"
        
        lottimeinws7 = .Rows(1).Find("lot_Time").Column
        .Columns(lottimeinws7).Insert
        
        qinws7 = .Rows(1).Find("Q").Column
        .Columns(qinws7).Copy Destination:=.Columns(lottimeinws7)
        .Cells(1, lottimeinws7).Value = "QNEW"
        
        totalqinws7 = .Rows(1).Find("totalQ").Column
        .Columns(totalqinws7).Insert
        
        orderinws7 = .Rows(1).Find("order").Column
        .Columns(orderinws7).Copy Destination:=.Columns(totalqinws7)
        .Cells(1, totalqinws7).Value = "orderNEW"
        
        qinws7todelete = .Rows(1).Find("Q").Column
        .Columns(qinws7todelete).Delete
        
        orderinws7todelete = .Rows(1).Find("order").Column
        .Columns(orderinws7todelete).Delete
        
        .Rows(1).Find("orderNEW").Value = "order"
        .Rows(1).Find("QNEW").Value = "Q"
        .Rows(1).Find("basis").Value = "basis_bkr"
        .Rows(1).Find("realized_PL").Value = "realized_PL_bkr"
        .Rows(1).Find("codes").Value = "codes_bkr"
        
    End With
    
    'Save trades, orders and section info into csv file
    
    Dim savetodirectory As String
    
    'Set up the saving directory
    savetodirectory = wb.Path
    
    Dim tradessavefilename As String
    Dim allocationsavefilename As String

    'get the filename without the extension. Does not work if hide extension is on and there are s in the name

    Dim workbookname As String
    workbookname = Left(ThisWorkbook.Name, (InStrRev(ThisWorkbook.Name, ".", -1, vbTextCompare) - 1))
    
    'set up the filename to save
    tradessavefilename = workbookname & "-trades-" & filecode & "-4SQL.csv"

    ws2.Select
    
    ActiveWorkbook.SaveAs Filename:= _
        savetodirectory & ":" & tradessavefilename, _
        FileFormat:=xlCSV

    washsavefilename = workbookname & "-washes-" & filecode & "-4SQL.csv"
        
    ws5.Select
    
    ActiveWorkbook.SaveAs Filename:= _
        savetodirectory & ":" & washsavefilename, _
        FileFormat:=xlCSV
    
    allocationsavefilename = workbookname & "-brokerIBmatches-" & filecode & "-4SQL.csv"
        
    ws7.Select
    
    ActiveWorkbook.SaveAs Filename:= _
        savetodirectory & ":" & allocationsavefilename, _
        FileFormat:=xlCSV
    
    Dim newworkbookname As String
    newworkbookname = workbookname & "-Cleaned"
    
    wb.SaveAs Filename:=savetodirectory & ":" & newworkbookname, FileFormat:=xlOpenXMLWorkbookMacroEnabled

    Application.ScreenUpdating = True
End Sub



