Sub TradesSection()

    Dim wb As Workbook
    Dim ws1 As Worksheet
    Dim ws2 As Worksheet
    Dim ws3 As Worksheet
    Dim trades_start As Range
    Dim trades_end As Range
    Dim numOfRow As Long
    Dim numOfColumn As Long
    Dim r As Range
    Dim lst As Variant
    
    'Close screen updating and possible alerts
    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
      
    'Delete useless worksheets if exists in this workbook
    Set wb = ThisWorkbook
    On Error Resume Next
    wb.Worksheets("Section Info").Delete
    wb.Worksheets("Trades").Delete
    
    Set ws1 = wb.Worksheets("Sheet1")
      
    'In the sheet1, find the start along with the end row of section "trade"
    With ws1.Columns(1)
        Dim transit_cell As Range
        Set trades_start = .Find("Trades", lookAt:=xlWhole, _
        MatchCase:=True)
        Set transit_cell = .Find("Symbol", After:=trades_start.Offset(1), _
        lookAt:=xlWhole, MatchCase:=True)
        Set trades_end = .Find("Symbol", After:=transit_cell, _
        lookAt:=xlWhole, MatchCase:=True).Offset(-1)
    End With
       
    'In the sheet2, display the information of trade section
    'set the format as well
    Set ws2 = wb.Worksheets.Add(After:=ws1)
    ws2.Name = "Section Info"
    With ws2
        Cells(1, 1).Value = "Section"
        Cells(1, 2).Value = "Start Row"
        Cells(1, 3).Value = "End Row"
        Cells(1, 4).Value = "Notes"
        Cells(2, 1).Value = "Trades"
        Cells(2, 2).Value = trades_start.Row
        Cells(2, 3).Value = trades_end.Row
        Cells(2, 4).Value = "Info is based on original file"
        Range("A1:D1").Font.Bold = True
        Range("A1").CurrentRegion.HorizontalAlignment = Excel.xlCenter
        Range("A1").CurrentRegion.AutoFit
    End With
    
    'Copy and paste the whole information of trade section
    'from sheet1 to sheet3 via array
    'takes care of unmerging cells automatically
    numOfColumn = ws1.Cells(trades_start.Row + 1, Columns.Count).End(xlToLeft).Column
    Set ws3 = wb.Worksheets.Add(After:=ws2)
    ws3.Name = "Trades"
    lst = ws1.Range(trades_start, trades_end.Offset(0, numOfColumn - 1))
    ws3.Range("A1").Resize(UBound(lst, 1), UBound(lst, 2)) = lst
    
    'Delete all the useless rows, i.e. contain string "Total", the empty rows
    'rows with fields' names and other meaningless rows
    'field 1 is used to delete empty rows
    'field 2 is used to delete "total" rows
    Dim colOfDateTime As Integer
    numOfRow = trades_end.Row - trades_start.Row + 1
    colOfDateTime = Rows(2).Find("Date/Time").Column
    With Range(Cells(1, 1), Cells(numOfRow, numOfColumn))
        .AutoFilter field:=1, Criteria1:=""
        .Resize(Rows.Count - 1).Offset(1).EntireRow.Delete
        .AutoFilter
        .AutoFilter field:=colOfDateTime, Criteria1:=""
        .EntireRow.Delete
    End With
    
    numOfRow = Cells(Rows.Count, 1).End(xlUp).Row
    
    'Freeze the first row for conveniently observe the data
    Rows(1).Select
    With ActiveWindow
        .SplitRow = 1
        .FreezePanes = True
    End With
    
    'ADD COLUMNS AND COMPLETE INFO
    'Insert the new symbol first, which is the same as old symbol except for the closed lots
    'for closed lot, the symbol is as the same as the row above
    Dim colOfOldSymbol As Integer
    Columns(2).Insert
    colOfOldSymbol = Rows(1).Find("Symbol").Column
    lst = Columns(colOfOldSymbol)
    Columns(2) = lst
    Cells(1, 2).Value = "New_Symbol"
    For Each r In Range(Cells(2, 2), Cells(numOfRow, 2))
        If InStr(1, Cells(r.Row, colOfOldSymbol).Value, "Closed") <> 0 Then
            r.Value = r.Offset(-1).Value
        End If
    Next r
    
    'Insert trade_time right before date/time, set the format as regular date/time
    'for closed lots, the trade time is the same as the last trade
    colOfDateTime = Rows(1).Find("Date/Time").Column
    With ws3
        Columns(colOfDateTime).Insert
        Columns(colOfDateTime + 1).NumberFormat = "yyyy-mm-dd HH:mm:ss"
        lst = Columns(colOfDateTime + 1)
        Columns(colOfDateTime) = lst
        Cells(1, colOfDateTime).Value = "Trade_Time"
    End With
    Columns(colOfDateTime).NumberFormat = "yyyy-mm-dd HH:mm:ss"
    colOfOldSymbol = Rows(1).Find("Symbol").Column
    For Each r In Range(Cells(2, colOfDateTime), Cells(numOfRow, colOfDateTime))
        If InStr(1, Cells(r.Row, colOfOldSymbol).Value, "Closed") <> 0 Then
            r.Value = r.Offset(-1).Value
        Else
            If r.Value Like "*,*" Then
                r.Value = DateSerial(Left(r.Value, 4), Mid(r.Value, 6, 2), _
                Mid(r.Value, 9, 2)) & " " & Right(r.Value, 8)
            End If
        End If
    Next r
    
    'Insert the term "TotalQ"
    Dim colOfQ As Integer
    Dim colOfExchange As Integer
    Columns(4).Insert
    Columns(4).NumberFormat = "General"
    colOfQ = Rows(1).Find("Quantity").Column
    lst = Columns(colOfQ)
    Columns(4) = lst
    Cells(1, 4).Value = "TotalQ"
    colOfExchange = Rows(1).Find("Exchange").Column
    For Each r In Range(Cells(2, 4), Cells(numOfRow, 4))
        If Cells(r.Row, colOfExchange).Value <> "-" Then
            r.Value = r.Offset(-1).Value
        End If
    Next r
    
    'Insert lot_time right after total quantity, which agrees with
    'the time of closed lots under column date/time
    'reset the time format
    Dim colOfLotTime As Integer
    Dim str As String
    colOfLotTime = 5
    Columns(colOfLotTime).Insert
    Columns(colOfLotTime).NumberFormat = "yyyy-mm-dd HH:mm:ss"
    colOfOldSymbol = Rows(1).Find("Symbol").Column
    colOfDateTime = Rows(1).Find("Date/Time").Column
    lst = Columns(colOfDateTime)
    Columns(colOfLotTime) = lst
    Cells(1, colOfLotTime).Value = "Lot_Time"
    For Each r In Range(Cells(2, colOfLotTime), Cells(numOfRow, colOfLotTime))
        If InStr(1, Cells(r.Row, colOfOldSymbol).Value, "Closed") <> 0 Then
            If r.Value Like "*,*" Then
                r.Value = DateSerial(Left(r.Value, 4), Mid(r.Value, 6, 2), _
                Mid(r.Value, 9, 2)) & " " & Right(r.Value, 8)
            End If
        Else
            r.Value = ""
        End If
    Next r
    
    'Delete the rows of summary, in which exchange is "-" or "--"
    colOfExchange = Rows(1).Find("Exchange").Column
    With Range("A1").CurrentRegion
        .AutoFilter field:=colOfExchange, Criteria1:="-", Operator:=xlOr, Criteria2:="--"
        .Resize(Rows.Count - 1).Offset(1).EntireRow.Delete
        .AutoFilter
    End With
    
    numOfRow = Cells(Rows.Count, 1).End(xlUp).Row
    
    'COPY DOWN EXCHANGE, PROCEEDS, COMMTAX AND CODES TO THE ROWS OF CLOSED LOTS
    'First exchange, then proceeds, afterwards commTax, then codes, finally multi
    Dim colOfCodes As Integer
    Dim colOfProceeds As Integer
    Dim colOfCommTax As Integer
    Dim colOfMulti As Integer
    Dim colOfTotalQ As Integer
    Dim colOfTPrice As Integer
    
    colOfCodes = Rows(1).Find("Code").Column
    Columns(colOfCodes).Insert
    Cells(1, colOfCodes).Value = "Multi"
    colOfMulti = colOfCodes
    colOfCodes = colOfMulti + 1
    colOfProceeds = Rows(1).Find("Proceeds").Column
    colOfCommTax = Rows(1).Find("Comm/Tax").Column
    colOfExchange = Rows(1).Find("Exchange").Column
    colOfDateTime = Rows(1).Find("Date/Time").Column
    colOfLotTime = Rows(1).Find("Lot_Time").Column
    colOfQ = Rows(1).Find("Quantity").Column
    colOfTotalQ = Rows(1).Find("TotalQ").Column
    colOfTPrice = Rows(1).Find("T. Price").Column
    
    For Each r In Range(Cells(2, colOfExchange), Cells(Rows.Count, colOfDateTime).End(xlUp). _
    Offset(0, colOfExchange - colOfDateTime))
        If Not IsEmpty(Cells(r.Row, colOfLotTime)) Then
        
            'exchange
            r.Value = r.Offset(-1).Value
            
            'proceeds
            Cells(r.Row, colOfProceeds).Value = Cells(r.Row - 1, colOfProceeds).Value * Abs( _
            Cells(r.Row, colOfQ).Value / Cells(r.Row, colOfTotalQ).Value)
            
            'CommTax
            Cells(r.Row, colOfCommTax).Value = Cells(r.Row - 1, colOfCommTax).Value * Abs( _
            Cells(r.Row, colOfQ).Value / Cells(r.Row, colOfTotalQ).Value)
            
            'codes
            Cells(r.Row, colOfCodes).Value = Cells(r.Row - 1, colOfCodes).Value & ";" & _
            Cells(r.Row, colOfCodes).Value
            
            'multi
            Cells(r.Row, colOfMulti).Value = Cells(r.Row - 1, colOfMulti).Value
        Else
            
            'multi
            Cells(r.Row, colOfMulti).Value = Round(Abs(Cells(r.Row, colOfProceeds).Value / _
            (Cells(r.Row, colOfQ).Value * Cells(r.Row, colOfTPrice).Value)))
        End If
    Next r
    
    'Set the secType as "O" for options while "S" for stocks
    Dim boundRow As Integer
    Columns(1).Insert
    Cells(1, 1).Value = "SecType"
    colOfOldSymbol = Rows(1).Find("Symbol").Column
    boundRow = Range(Cells(2, colOfOldSymbol), Cells(numOfRow, colOfOldSymbol)).Find("Symbol").Row
    Range(Cells(2, 1), Cells(boundRow, 1)).Value = "S"
    Range(Cells(boundRow + 1, 1), Cells(numOfRow, 1)).Value = "O"
    
    'Insert three terms: underlying, expiry and strike after symbol as well as give values to each cell
    Dim space1 As Integer
    Dim space2 As Integer
    Dim colOfNewSymbol As Integer
    
    Columns(4).Insert
    Cells(1, 4).Value = "Underlying"
    Columns(5).Insert
    Cells(1, 5).Value = "Expiry"
    Columns(6).Insert
    Cells(1, 6).Value = "Strike"
    Columns(7).Insert
    Cells(1, 7).Value = "O_Type"
    Columns(5).NumberFormat = "yyyy-mm-dd"
    colOfNewSymbol = Rows(1).Find("New_Symbol").Column
    
    For Each r In Range(Cells(2, colOfNewSymbol), Cells(numOfRow, colOfNewSymbol))
        If Not (r.Value Like "* * * *") Then
            Cells(r.Row, 4).Value = r.Value
        Else
            space1 = InStr(1, r.Value, " ")
            space2 = InStr(space1 + 1, r.Value, " ")
            space3 = Len(r.Value) - 1
            Cells(r.Row, 4).Value = Left(r.Value, space1 - 1)
            Cells(r.Row, 5).Value = Mid(r.Value, space1 + 1, space2 - space1 - 1)
            Cells(r.Row, 6).Value = Mid(r.Value, space2 + 1, space3 - space2 - 1)
            Cells(r.Row, 7).Value = Right(r.Value, 1)
        End If
    Next r
    
    'Insert the terms account in the last column, all of them are IB9048
    numOfColumn = Cells(1, Columns.Count).End(xlToLeft).Column
    Cells(1, numOfColumn + 1).Value = "Account"
    Range(Cells(2, numOfColumn + 1), Cells(numOfRow, numOfColumn + 1)).Value = "IB9048"
    
    'Insert file code in the first row
    'first two letters be the day and the last letter be random
    Dim filecode As String
    Columns(1).Insert
    Cells(1, 1).Value = "filecode"
    filecode = Mid(Format(Date, "dd/mm/yyyy"), 1, 2) & Chr(Int((90 - 65 + 1) * Rnd + 65))
    Range(Cells(2, 1), Cells(numOfRow, 1)).Value = filecode
    
    'Insert the term OC
    'O for opening trades, C for closing trades, CS for closing trade summaries
    Dim oc As Integer
    oc = Cells(1, Columns.Count).End(xlToLeft).Column
    Columns(oc).Insert
    Cells(1, oc).Value = "OC"
    colOfCodes = Rows(1).Find("Code").Column
    colOfLotTime = Rows(1).Find("Lot_Time").Column
    For Each r In Range(Cells(2, oc), Cells(numOfRow, oc))
        If InStr(1, Cells(r.Row, colOfCodes).Value, "C") <> 0 Then
            If IsEmpty(Cells(r.Row, colOfLotTime).Value) Then
                r.Value = "CS"
            Else
                r.Value = "C"
            End If
        Else
            r.Value = "O"
        End If
    Next r
             
    'DELETE USELESS ROWS AND COLUMNS
    'Delete the row which distinguishes stocks from options
    Rows(boundRow).Delete
    numOfRow = numOfRow - 1
    
    'Delete the columns which we do not need
    Columns(Rows(1).Find("C. Price").Column).Delete
    Columns(Rows(1).Find("MTM P/L").Column).Delete
    Columns(Rows(1).Find("Symbol").Column).Delete
    Columns(Rows(1).Find("Date/Time").Column).Delete
    
    'Sort the data according to the trade time
    num = Rows(1).Find("Trade_Time").Column
    numOfColumn = Cells(1, Columns.Count).End(xlToLeft).Column
    With Range(Cells(2, 1), Cells(numOfRow, numOfColumn))
        .Sort key1:=Columns(num), order1:=xlAscending
    End With
    
    'delete wash sale
    For RowToTest = Cells(Rows.Count, 4).End(xlUp).Row To 3 Step -1

        With Cells(RowToTest, 4)
            If .Value = "Wash Sale:" Then
                Rows(RowToTest).EntireRow.Delete
				numOfRow = numOfRow - 1
			End If
        End With
        
    Next RowToTest
    
    'Insert input line in the second column
    'this must be done after sorting
    Columns(2).Insert
    Cells(1, 2).Value = "inputLine"
    Range(Cells(2, 2), Cells(numOfRow, 2)).Value = "=row() - 1"
    
    'Change the names of each field to make them correspond to the schema
    With Rows(1)
        .Find("Quantity").Value = "Q"
        .Find("T. Price").Value = "Price"
        .Find("Comm/Tax").Value = "CommTax"
        .Find("Realized P/L").Value = "Realized_PL"
        .Find("Code").Value = "Codes"
        .Find("New_Symbol").Value = "Symbol"
    End With
    
    'Set the data format in the 3rd worksheet
    'open screen update to display the result
    With ws3
        .Cells(1, 1).CurrentRegion.AutoFit
        .Cells(1, 1).CurrentRegion.HorizontalAlignment = Excel.xlCenter
        .Rows(1).Font.Bold = True
    End With
    Application.ScreenUpdating = True
    
    'Append the filecode to the filename
    ws3.SaveAs Filename:="C:\Users\Wei\Desktop\elle_work\vba_trades\wei_testing\real_work\U529048 Trades 2012-" & filecode, _
    FileFormat:=xlCSV
        
End Sub



