/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.elle.elle_gui.presentation;

import com.elle.elle_gui.logic.ATrade;
import com.elle.elle_gui.logic.EditableTableModel;
import java.awt.Dimension;
import java.util.Vector;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author fuxiaoqian
 */
public class ViewATradeWindow extends javax.swing.JFrame {
    
    private ATrade aTradeInView;
    private ELLE_GUI_Frame ELLEGUI;

    /**
     * Creates new form SelectionRowView
     */
    public ViewATradeWindow(ATrade tradeInView) {
        
        aTradeInView = tradeInView;
       
        initComponents();
        
        loadATradeToTable();
        
        ELLEGUI = ELLE_GUI_Frame.getInstance();  
        this.setPreferredSize(new Dimension(300, 600));
        this.setLocationRelativeTo(ELLEGUI);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        aTradeScrollpane = new javax.swing.JScrollPane();
        aTradeTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("View Trade");
        setName("viewATrade"); // NOI18N

        aTradeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        aTradeScrollpane.setViewportView(aTradeTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(aTradeScrollpane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(aTradeScrollpane, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void loadATradeToTable(){
        Vector<String> aTradeColumnName = new Vector<String>();
        aTradeColumnName.addElement("field name");
        aTradeColumnName.addElement("field value");
        
        Vector<Vector> aTradeRowValue = getRowData();
        
        DefaultTableModel tableModel = new DefaultTableModel(aTradeRowValue, aTradeColumnName);
        aTradeTable.setModel(tableModel);
    }
    
    private Vector<Vector> getRowData(){
        Vector<Vector> rowData = new Vector<Vector>();
        int rowCount = aTradeInView.getFieldValues().size();
        for(int i = 0; i < rowCount; i++){
            Vector aRow = new Vector();
            aRow.addElement(aTradeInView.getAccountTable().getTableColNames().get(i));
            aRow.addElement(aTradeInView.getFieldValues().get(i));
            rowData.addElement(aRow);
        }
        return rowData;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane aTradeScrollpane;
    private javax.swing.JTable aTradeTable;
    // End of variables declaration//GEN-END:variables
}
